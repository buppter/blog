{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"2af3892a569e032a547d653ef8647b60ea2055a2","modified":1548390497441},{"_id":"source/CNAME","hash":"f816894eeb701d07139ce16d1e74c7f7835e629e","modified":1548390497442},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1548390497560},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1548390497561},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1548390497562},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1548390497563},{"_id":"themes/next/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1548390497571},{"_id":"themes/next/.stickler.yml","hash":"ff2f06a57645c0034e86667c104656f8d7cfadd4","modified":1548390497572},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1548390497573},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1548390497574},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1548390497575},{"_id":"themes/next/README.md","hash":"ca711f92e985183030de7b7fcc6efd9018c638b8","modified":1548390497576},{"_id":"themes/next/_config.yml","hash":"247e1b2e5f613e8825dc4a158b2c2d4bc2aee4a6","modified":1548398938445},{"_id":"themes/next/bower.json","hash":"72d7f5ef565cca1da30ba64fc04075b9ac99e319","modified":1548390497578},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1548390497578},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1548390497603},{"_id":"themes/next/package.json","hash":"735ace0b7fe3b1171c220c5424fcd4fe3aadd7f8","modified":1548390497716},{"_id":"source/_posts/SQLAchemy中处理两张表之间存在多个外键的情况.md","hash":"62b2eaa1f371a019a105d2d988d334df637b1c04","modified":1548397331400},{"_id":"source/categories/index.md","hash":"84a3483537bb1ba3dde0d15ce091e6d7fa05ce42","modified":1548390497447},{"_id":"source/tags/index.md","hash":"0714d30d87193a86334656257d41b5c6b0f91bea","modified":1548390497450},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1548390497564},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"869dcd36524e2c61ddd2315c1266edca7f0da6c9","modified":1548390497565},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1548390497567},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1548390497568},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1548390497569},{"_id":"themes/next/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1548390497570},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1548390497580},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1548390497581},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1548390497582},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1548390497583},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1548390497585},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1548390497586},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1548390497587},{"_id":"themes/next/docs/MATH.md","hash":"34a46ca9a05b4570903beaadd4807e6759afb52e","modified":1548390497587},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1548390497588},{"_id":"themes/next/languages/de.yml","hash":"641e49587d41bb87e4d5932dc3d975754ded7953","modified":1548390497605},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1548390497606},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1548390497606},{"_id":"themes/next/languages/fr.yml","hash":"ebcd1f188af8c3f5ef1f0923e794c839fbfae2d4","modified":1548390497607},{"_id":"themes/next/languages/id.yml","hash":"9709a4dbacc56a1571a96b139b872128d6959e90","modified":1548390497608},{"_id":"themes/next/languages/it.yml","hash":"4e3adeb10c0fa627935d69ae1783ce0894f5dee5","modified":1548390497609},{"_id":"themes/next/languages/ja.yml","hash":"7836f1de1f383d3a53770a03498cc39a37674f0c","modified":1548390497610},{"_id":"themes/next/languages/ko.yml","hash":"33e065ceb21590b8eb32430a69e76c2f057eb758","modified":1548390497611},{"_id":"themes/next/languages/nl.yml","hash":"060efc260c1c529469d739d97dcee79683e8f411","modified":1548390497612},{"_id":"themes/next/languages/pt-BR.yml","hash":"dc09e290e908744ca28e093dbdd859ca2a20290e","modified":1548390497612},{"_id":"themes/next/languages/pt.yml","hash":"53e2a52b9d5dc20c04080acd4f5b954e8699780f","modified":1548390497613},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1548390497614},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1548390497615},{"_id":"themes/next/languages/vi.yml","hash":"e2b3b18359ab41d58c64b2002acfedd60a7505a4","modified":1548390497616},{"_id":"themes/next/languages/zh-CN.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1548390497617},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1548390497618},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1548390497619},{"_id":"themes/next/layout/_layout.swig","hash":"4a3e7ebb0d4f88a64e919695aa4272221fe88347","modified":1548390497623},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1548390497709},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1548390497710},{"_id":"themes/next/layout/index.swig","hash":"9257f8c35b1eeb3dbc3eb8e7c791620d9ce931f3","modified":1548390497711},{"_id":"themes/next/layout/page.swig","hash":"9ddf40303f82e3db76d59dc82b6d4eadfed203c6","modified":1548390497712},{"_id":"themes/next/layout/schedule.swig","hash":"d99b9eff0cff38caf095445f27c08aaf11a5b862","modified":1548390497714},{"_id":"themes/next/layout/post.swig","hash":"ce227737a6273c6ba729fa426418ec3f9722fdb4","modified":1548390497713},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1548390497715},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1548390497719},{"_id":"themes/next/scripts/helpers.js","hash":"c91522de30a85cd36b3547ad3446c34e4ba618ef","modified":1548390497717},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1548390497722},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1548390497914},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1548390497915},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1548390497916},{"_id":"themes/next/layout/_custom/header.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497621},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497872},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1548390497590},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1548390497591},{"_id":"themes/next/docs/ru/README.md","hash":"a78a155885ce23f924cd194b8c69fe7f2ffea8d0","modified":1548390497592},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1548390497593},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1548390497594},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1548390497596},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"f2a2d6e68c5f65e27303b40f5285a8a4a5adae4c","modified":1548390497596},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1548390497598},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1548390497599},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1548390497600},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"4d68054b062b3c8404b146a155d9624d2d25dd9b","modified":1548390497601},{"_id":"themes/next/docs/zh-CN/README.md","hash":"a4d2c1f90d5bd1d54f92b39b47ff85b1fe8b4e81","modified":1548390497602},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"1ec7a0e9ac64b2c84aa1fd7ba2c662be1dbcb407","modified":1548390497603},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1548390497621},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1548390497622},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1548390497627},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"da831b8f1a9a6cbf9897318cad82be76254b62ab","modified":1548390497628},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1548390497629},{"_id":"themes/next/layout/_macro/post.swig","hash":"b1ef162930827e4d57a29c4cf0cd349b36c30323","modified":1548390497630},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56733f92352b891b0bb1baca293f68f6c8928b0b","modified":1548390497631},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a9519b4f82aa516e516317d0447bf5c5c7ffb544","modified":1548390497632},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1548390497633},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1548390497635},{"_id":"themes/next/layout/_partials/comments.swig","hash":"2e8c3df265e9ae38003d1321fb80fb3b12cb6a97","modified":1548390497636},{"_id":"themes/next/layout/_partials/footer.swig","hash":"003c5db07070d40590a0b9b067528476049bfb0d","modified":1548390497637},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1548390497645},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1548390497646},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1548390497657},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1548390497658},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1548390497658},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f134aeb8d5bee351e5277edb92ac694af314b75f","modified":1548390497665},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1548390497679},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1548390497689},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1548390497690},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"736cb278fa09d3b4ed6f305b56353941ea918793","modified":1548390497691},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1548390497696},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1548390497696},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1548390497697},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1548390497698},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1548390497699},{"_id":"themes/next/scripts/tags/button.js","hash":"496e3846f353d253dad944b2ed8fdc4e02dcc28a","modified":1548390497724},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"5c87817385986748617fa87dee9cba654566adcd","modified":1548390497725},{"_id":"themes/next/scripts/tags/exturl.js","hash":"4f928ef9ad0ae8e3d766352b8861bc22f96de5d8","modified":1548390497727},{"_id":"themes/next/scripts/tags/full-image.js","hash":"2118895d2d5e379240b27399a6c988a74f25a427","modified":1548390497728},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"696157d4e4382fdbe29c674b0f4b433d47db449b","modified":1548390497730},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"1f7bafba9cf3c94f5735873bd52e93ddcf37f8a2","modified":1548390497731},{"_id":"themes/next/scripts/tags/label.js","hash":"d8bfb2974c6afef2c085642857b70b6569b4a097","modified":1548390497732},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"92c0ead5f503cfc4ee7c254ebfb00a2623fa1890","modified":1548390497733},{"_id":"themes/next/scripts/tags/note.js","hash":"1cec218c9fcaa8fb4144bf9d0b39babcaafac8d4","modified":1548390497734},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1548390497736},{"_id":"themes/next/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1548390497870},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1548390497873},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1548390497874},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1548390497875},{"_id":"themes/next/source/images/avatar.jpg","hash":"1d6d672dbc5651325306da7cdacd330137c3d4cd","modified":1548390497876},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1548390497877},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1548390497879},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1548390497880},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1548390497880},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1548390497881},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1548390497882},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1548390497883},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"233fd28ae5af07ae3216ede3d13649c696fc8a4b","modified":1548390497884},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"720ba72c07738853513303ca1e334c6c03926f3c","modified":1548390497885},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548390497886},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1548390497887},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548390497887},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1548390497888},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1548390497889},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548390497890},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497662},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497663},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497836},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497837},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497839},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548390497866},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1548390497625},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"aab518204d3125e948796a9ba6b56b09cade2d92","modified":1548390497626},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1548390497638},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1548390497639},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"09109a5c5a301e7cc5e3c7aec32b0164739fc7d4","modified":1548390497640},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1548390497642},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1548390497643},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1548390497643},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1548390497645},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1548390497648},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1548390497649},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1548390497650},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1548390497651},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1548390497652},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1548390497653},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1548390497654},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1548390497655},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1548390497660},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1548390497662},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1548390497664},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1548390497668},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1548390497668},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1548390497669},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"c43f41b7f3c0743d1e673af2e787ea34a67fc9cb","modified":1548390497670},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1548390497671},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1548390497672},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"d67d9a176a276cdab6f2bcb7eb3650fbca5459c4","modified":1548390497673},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1548390497674},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1548390497674},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"7973b4741863362cd9d023216de4a43eb23dc227","modified":1548390497675},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1548390497676},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1548390497677},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1548390497678},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1548390497681},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"4a2d2269f23e90c1311bd867d22def0b4a092bf1","modified":1548390497682},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1548390497683},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"787d482d797c38e77d69629ebb88d45f972216b7","modified":1548390497684},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"18a58db53f1eef50462ee0065d4445b7fbb04fb5","modified":1548390497685},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"7cf0c589d95a2d1848266ffe2357e91c95d2e7f8","modified":1548390497686},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"de1fac9bb3f0cab88b1ed1950f76c7eb0037aeda","modified":1548390497687},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"ab181c036cda9656f87bb1a749e3e7cbc437f012","modified":1548390497687},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1548390497693},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1548390497694},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"c0c2fd87e71f0beb542aa50c0bc875da5aa5c44b","modified":1548390497695},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1548390497704},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1548390497705},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1548390497706},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1548390497708},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"89c64b7fee8f8d9f53f6422d21dd4e490b5a1f2d","modified":1548390497834},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1548390497836},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1548390497838},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"4d6dd32dae6f0ea93d43c5cfa0106b6cb46c3b00","modified":1548390497839},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"8b5fc9e6621a5de04ae7d9ef117683c69965fb00","modified":1548390497866},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1548390497866},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"b89e68789e6dac24e00250528f4fc9ae8aa3599b","modified":1548390497868},{"_id":"themes/next/source/css/_variables/base.styl","hash":"534b9dec93f3e235c217b97314d4bf513fa3e5ba","modified":1548390497869},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"14cd2b2847c456d6b1af4f8f1c92fadea94f2115","modified":1548390497869},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1548390497893},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1548390497892},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"8e9ed6392620ba68726c0ade4868100d831daba8","modified":1548390497894},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1548390497895},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1548390497896},{"_id":"themes/next/source/js/src/motion.js","hash":"bea49fc6392bd38fb6f80d041d95d23051423aa2","modified":1548390497897},{"_id":"themes/next/source/js/src/post-details.js","hash":"02acfa1862d5e4345d6a7cee08841cc9e2fb0259","modified":1548390497898},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1548390497900},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1548390497901},{"_id":"themes/next/source/js/src/utils.js","hash":"d8d288bc41af85fc72882239529131cbd6a13f9d","modified":1548390497902},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1548390497909},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1548390497911},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1548390497912},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1548390497702},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1548390497703},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1548390497825},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1548390497741},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1548390497742},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1548390497744},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1548390497745},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1548390497747},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1548390497775},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1548390497804},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"97bb39756e85f5b27bba7f43270105ad01d736c9","modified":1548390497827},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1548390497828},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1548390497830},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1548390497831},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1548390497832},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"52bc8ba71b91d954530b35dfc63b402a02b1321d","modified":1548390497833},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"c08eb379718fa5af267fd8c5fe9b926003c0c7c7","modified":1548390497842},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1548390497843},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1548390497844},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1548390497845},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f3aa863adf972569b72f2df6bc6a914e7daace99","modified":1548390497846},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1548390497847},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1548390497847},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1548390497848},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1548390497852},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1548390497853},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"3cc7646583218d16925ced7b70865e63a901d4a7","modified":1548390497854},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1548390497855},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1548390497855},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ab7eb1d66e300264a225feb6f8bed55683c96cdf","modified":1548390497859},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"cc961108b12ab97d9216606ceb1cd1cd31ab20f0","modified":1548390497860},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1548390497862},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"df16dc995eb9ad498df2edcfc3e20528fc9aa133","modified":1548390497863},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1548390497858},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1548390497863},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1548390497864},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1548390497900},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1548390497905},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1548390497749},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1548390497751},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1548390497753},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1548390497754},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1548390497755},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1548390497757},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1548390497758},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1548390497761},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"835c1340571bd6c4ec263c482cf13283fb047e49","modified":1548390497763},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1548390497765},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1548390497767},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1548390497769},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1548390497770},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1548390497771},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1548390497772},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1548390497774},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1548390497777},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1548390497778},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1548390497779},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1548390497780},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1548390497781},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1548390497782},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1548390497783},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1548390497784},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1548390497784},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1548390497785},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1548390497786},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1548390497787},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"adfd6d2d3b34adc4b476a0ea91e19020456a3b1a","modified":1548390497788},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1548390497789},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1548390497790},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"1faeb3fca899df9d033e4e6ad9a4867cdce7ef9d","modified":1548390497790},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1548390497792},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"debe322cc9e2688ecf38d0b6afcd6b71ad02fbd0","modified":1548390497793},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1548390497794},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1548390497795},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1548390497796},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1548390497797},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1548390497797},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1548390497801},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1548390497802},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1548390497803},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1548390497805},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1548390497806},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"d79c051abb8ab7b5ee5da29a28587704fd5108f5","modified":1548390497807},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1548390497808},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1548390497809},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1548390497810},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1548390497811},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1548390497812},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1548390497813},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1548390497814},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1548390497816},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1548390497817},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1548390497818},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1548390497819},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1548390497820},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1548390497821},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1548390497822},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1548390497823},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"0b9c4140d7bc526553553552c3ed92da7c81e0b6","modified":1548390497824},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1548390497850},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1548390497857},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1548390497908},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1548390497851},{"_id":"public/atom.xml","hash":"d60f0c16724ec02cc6ddce05a07779c071595869","modified":1548398979315},{"_id":"public/search.xml","hash":"8bd39cc963023482a728a4db9085e6f849a8b6ea","modified":1548398982094},{"_id":"public/404.html","hash":"e4ae7c7830e7227a6c102e33f20723b7475c76e0","modified":1548398982116},{"_id":"public/archives/index.html","hash":"c765a5d55bfb838022a122c6b89370c26e55e6f8","modified":1548398982116},{"_id":"public/archives/2019/index.html","hash":"ca28929d3c00ed99c7ea231e89f9e6f9b21c80bc","modified":1548398982116},{"_id":"public/archives/2019/01/index.html","hash":"d1b0a78ecc0c0a324d9fa86cb9b6fb65511426b7","modified":1548398982118},{"_id":"public/categories/Flask/index.html","hash":"680944206ec6af217349fdf516b2821cba3a8f8b","modified":1548398982119},{"_id":"public/tags/Flask/index.html","hash":"baeb12b9ebeac7141c16645c476fa48c1b17d92f","modified":1548398982119},{"_id":"public/tags/Flask-SQLAchemy/index.html","hash":"2c01bb8343d3aaf88a6cd28089dea1a1ca6e3d95","modified":1548398982119},{"_id":"public/tags/SQLAchemy/index.html","hash":"8aeabc12c9de1426212784db13bfed7255530a25","modified":1548398982119},{"_id":"public/categories/index.html","hash":"6bfab49cb120abcc172bdd09ae4c6b1a3bda6393","modified":1548398982120},{"_id":"public/tags/index.html","hash":"0600fe2923ff4d38d5813fe9280b65e1a4c2e70e","modified":1548398982120},{"_id":"public/2019/01/24/SQLAchemy中处理两张表之间存在多个外键的情况/index.html","hash":"72ef38cf6981ccb815d177372fc2f9b5a88d6704","modified":1548398982120},{"_id":"public/index.html","hash":"fdeda0803230655ca6f5c3fa05cfe3cc57e76199","modified":1548398982121},{"_id":"public/CNAME","hash":"f816894eeb701d07139ce16d1e74c7f7835e629e","modified":1548398982141},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1548398982142},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1548398982143},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1548398982144},{"_id":"public/images/avatar.jpg","hash":"1d6d672dbc5651325306da7cdacd330137c3d4cd","modified":1548398982145},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1548398982145},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1548398982146},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1548398982146},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1548398982146},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1548398982146},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1548398982146},{"_id":"public/images/favicon-16x16-next.png","hash":"233fd28ae5af07ae3216ede3d13649c696fc8a4b","modified":1548398982147},{"_id":"public/images/favicon-32x32-next.png","hash":"720ba72c07738853513303ca1e334c6c03926f3c","modified":1548398982147},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548398982147},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1548398982147},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1548398982148},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548398982148},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1548398982148},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1548398982148},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548398982148},{"_id":"public/js/src/algolia-search.js","hash":"a572ad1f57afc3fa890debb06a5e687be2289b95","modified":1548398984625},{"_id":"public/js/src/affix.js","hash":"68821f5071f59d11f2e58206020d12c3cf8019ed","modified":1548398984753},{"_id":"public/js/src/bootstrap.js","hash":"9196c5711f921519065ed47bb3b849fa2f346e6a","modified":1548398984753},{"_id":"public/js/src/exturl.js","hash":"9ab8ea3b8d564960a8b4fff44c28588f0f2bade9","modified":1548398984754},{"_id":"public/js/src/js.cookie.js","hash":"7f406fa838f16ab5ea89b234e6ef1919a19bf875","modified":1548398984754},{"_id":"public/js/src/post-details.js","hash":"fd36fcf92f053a87f41171bd5b34a447bd6f0de3","modified":1548398984754},{"_id":"public/js/src/scroll-cookie.js","hash":"acce98cb59b4a992450c0ce0ddf409a616917cc6","modified":1548398984754},{"_id":"public/js/src/scrollspy.js","hash":"beb495df82afd734be45b1dabbd947776e76db76","modified":1548398984754},{"_id":"public/js/src/schemes/pisces.js","hash":"8cef4c365c3b6c3a3fc53ce1e99cac90038ddbaa","modified":1548398984755},{"_id":"public/js/src/motion.js","hash":"8cbea082618d8bb356679f44c7c0b9c8f094e675","modified":1548398984767},{"_id":"public/js/src/utils.js","hash":"e2ea17994a59f026475d3215db1aa7fde63ebe00","modified":1548398984768},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1548398984769},{"_id":"public/css/main.css","hash":"80764a419ba3212c2c26e3a6ce5f07a49f644feb","modified":1548398984770},{"_id":"public/lib/velocity/velocity.ui.js","hash":"a063e6bb113143b333e757374d3dac8059f57749","modified":1548398985016},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1548398985016},{"_id":"public/lib/jquery/index.js","hash":"dfbee092746e7e545c17fa6ab7b561548dfab02b","modified":1548398985854},{"_id":"public/lib/velocity/velocity.js","hash":"c662490abe2eb0fd6b306c37bae6281469eebc82","modified":1548398986267}],"Category":[{"name":"Flask","_id":"cjrborsbb0004s8tmewehzgvc"}],"Data":[],"Page":[{"toc":false,"comments":0,"_content":"<!DOCTYPE html>\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n        <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"https://buppter.gitee.io\" homePageName=\"返回主页\"></script>\n\t</body>\n</html>\n","source":"404.html","raw":"---\ntoc: false\ncomments: false\npermalink: /404\n---\n<!DOCTYPE html>\n<html>\n    <head>\n         <meta charset=\"UTF-8\" />\n         <title>404</title>                                                                                                                                        \n    </head>\n    <body>\n        <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"https://buppter.gitee.io\" homePageName=\"返回主页\"></script>\n\t</body>\n</html>\n","date":"2019-01-25T04:28:17.441Z","updated":"2019-01-25T04:28:17.441Z","path":"/404.html","title":"","layout":"page","_id":"cjrborrua0000s8tmtdkqr1i1","content":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!DOCTYPE html><html><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><meta charset=\"UTF-8\"><title>404</title></head><body><script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://buppter.gitee.io\" homepagename=\"返回主页\"></script></body></html><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!DOCTYPE html><html><head><meta name=\"generator\" content=\"Hexo 3.8.0\"><meta charset=\"UTF-8\"><title>404</title></head><body><script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://buppter.gitee.io\" homepagename=\"返回主页\"></script></body></html><!-- rebuild by neat -->"},{"title":"文章分类","date":"2019-01-24T02:48:49.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2019-01-24 10:48:49\ntype: \"categories\"\n---\n","updated":"2019-01-25T04:28:17.447Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjrborsat0002s8tmst8p3xt7","content":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"},{"title":"标签","date":"2019-01-24T02:48:08.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-01-24 10:48:08\ntype: \"tags\"\n---\n","updated":"2019-01-25T04:28:17.450Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjrborsb20003s8tmn6gadlhv","content":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"","more":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->"}],"Post":[{"title":"SQLAchemy中处理两张表之间存在多个外键的情况","date":"2019-01-24T15:51:17.000Z","_content":"在Flask的开发中，我们势必会遇到两张表之间存在多个外键的情况。例如，现在有两张表，一张表是`User`，另一张表是`Article`。一篇文章的作者`author_id`可以设置外键关联`User`表，同时文章的审稿人`reviewer_id`也可以设置外键关联`User`表。当我们以SQLAchemy多对一(many to one)的设计方法来添加`relationship`关系映射时，程序会抛出一个`AmbiguousForeignKeysError`错误，这篇文章我们就来解决这个问题。\n<!--more-->\n### 出现Error的代码写法 \n先来看以SQLAchemy多对一的常规设计方法处理这个问题时我的代码写法。  \n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)  \n    email = db.Column(db.String(64), nullable=False, unique=True)  \n    name = db.Column(db.String(32), nullable=False)  \n    ...  \n    \nclass Article(db.Model):\n    __tablename__ = 'articles'\n    id = db.Column(db.Integer, primary_key=True)  \n    title = db.Column(db.String(64), nullable=False) \n    author_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    reviewer_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    author = db.relationship('User', backref='articles')  \n    reviewer = db.relationship('User', backref='review_articles')  \n```\n\n\n看起来程序的设计应该是没问题，可运行的结果真的跟我们预想的一样吗？  \n当我们运行代码后，程序抛出了一个错误：  \n\n```\nsqlalchemy.exc.AmbiguousForeignKeysError: \nCould not determine join condition between parent/child tables on relationship Article.author \n- there are multiple foreign key paths linking the tables.  \nSpecify the 'foreign_keys' argument, providing a list of those columns \nwhich should be counted as containing a foreign key reference to the parent table. \n```\n\n可以看到SQLAchemy提示无法确定`Article.author`的父子表之间的关联，原因在于两张表之间存在多个外键。需要我们指定`foreign_keys`参数，提供一个包含关联了父表（即`User`表）外键的字段列表（`list`)  \n\n### 解决办法  \n\n查询了很多博客资料后这个问题依旧没有得到解决，只好去阅读[SQLAchemy的官方文档](https://docs.sqlalchemy.org/en/latest/index.html)，在SQLAchemy ORM > Relationship Configuation > Configuring how Relationship Joins下有关于[Handling Multiple Join Paths](https://docs.sqlalchemy.org/en/latest/orm/join_conditions.html#handling-multiple-join-paths)的介绍。  \n\n文档中说，在遇到两表之间存在多外键关联时，需要给`relationship()`指定`foreign_keys`参数。需要对我们的代码进行修改，添加`foreign_keys`参数，所以将代码修改为：  \n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)  \n    email = db.Column(db.String(64), nullable=False, unique=True)  \n    name = db.Column(db.String(32), nullable=False)  \n    ...\n\n    def __repr__(self):\n        return '<User id={0}, name={1}>'.format(self.id, self.name)  \n    \nclass Article(db.Model):\n    __tablename__ = 'articles'\n    id = db.Column(db.Integer, primary_key=True)  \n    title = db.Column(db.String(64), nullable=False) \n    author_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    reviewer_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    author = db.relationship('User', backref='articles', foreign_keys=[author_id])  \n    reviewer = db.relationship('User', backref='review_articles', foreign_keys=[reviewer_id])\n\n    def __repr__(self):\n        return '<Article id={0}, title={1}>'.format(self.id, self.title)     \n```\n\n\n同时，在指定`foreign_keys`时，我们也可以使用字符串来指定。但如果使用列表，则列表必须是字符串的一部分。  \n\n```python\nauthor = db.relationship('User', backref='articles', foreign_keys=\"[author_id]\")\n```\n\n\n在我们这个具体的例子中，不需要列表，所以可以写成： \n\n\n```python\nauthor = db.relationship('User', backref='articles', foreign_keys=\"author_id\")\n```\n\n\n### 测试  \n\n在修改过后，我们运行程序，测试一下代码  \n我们先给`User`表添加两条数据   \n\n\n```\n>>> zhangsan = User(email='zhangsan@123.com', name='张三')\n>>> lisi = User(emaill='lisi@123.com', name='李四')\n>>> db.session.add_all([zhangsan,lisi])\n>>> db.session.commit()\n```\n\n\n接着给`Article`表添加一条记录，指定`Author`为`张三(users.id=1)`，`Reviewer`为`李四(usersid)`   \n\n\n```\n>>> article = Article()\n>>> article.title = \"Test\"\n>>> article.author_id = 1\n>>> article.reviewer_id = 2\n>>> db.session.add(article)\n>>> db.session.commit()\n```\n\n\n\n我们来做查询操作  \n\n\n```\n>>> article = Article.query.get(1)\n>>> article\n<Article id=1, title=Test>\n>>> article.author\n<User id=1, name=张三>\n>>> article.reviewer\n<User id=2, name=李四>\n```\n\n\n可以看到我们可以正确的查询到`article.author`和`article.reviewer`，关于[SQLAchemy中处理两张表之间存在多个外键的情况]()这个问题我们已经解决。  \n\n### 扩展  \n\n\n在`relationship()`中我们添加了`backref`参数来对关系提供反向引用，这样更加方便了我们的查询操作。示例： \n\n\n```\n>>> zhangsan = User.query.filter_by(name='张三').first()\n>>> zhangsan\n<User id=1, name=张三>\n>>> zhangsan.articles\n[<Article id=1, title=Test>]\n>>> zhangsan.review_articles\n[]\n```\n\n\n因为我们给`artice.author`添加了`articles`的反向引用，给`article.reviewer`添加了`review_articles`的反向引用。  \n所以对于`User 张三`来说，他是`article Test`的`Author`，可以通过`article.author`来查询得到`张三`。也可以通过`zhangsan.articles`反向查询得到`Test`这篇文章。  \n同时，因为`张三`不是任何一篇文章的`reviewer`，所以通过`zhangsan.review_articles`查询到结果为空列表。  \n同样的，我们来看`李四`的查询操作：\n\n\n```\n>>> lisi = User.query.filter_by(name='李四').first()\n>>> lisi\n<User id=2, name=李四>\n>>> lisi.articles\n[]\n>>> lisi.review_articles\n[<Article id=1, title=Test>]\n```\n\n\n结果其实跟`张三`的查询是类似的，只是两人的角色`author`和`reviewer`不同，这里不再啰嗦。  ","source":"_posts/SQLAchemy中处理两张表之间存在多个外键的情况.md","raw":"---\ntitle: SQLAchemy中处理两张表之间存在多个外键的情况\ndate: 2019-01-24 23:51:17\ncategories: Flask\ntags:\n    - Flask\n    - Flask-SQLAchemy\n    - SQLAchemy\n---\n在Flask的开发中，我们势必会遇到两张表之间存在多个外键的情况。例如，现在有两张表，一张表是`User`，另一张表是`Article`。一篇文章的作者`author_id`可以设置外键关联`User`表，同时文章的审稿人`reviewer_id`也可以设置外键关联`User`表。当我们以SQLAchemy多对一(many to one)的设计方法来添加`relationship`关系映射时，程序会抛出一个`AmbiguousForeignKeysError`错误，这篇文章我们就来解决这个问题。\n<!--more-->\n### 出现Error的代码写法 \n先来看以SQLAchemy多对一的常规设计方法处理这个问题时我的代码写法。  \n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)  \n    email = db.Column(db.String(64), nullable=False, unique=True)  \n    name = db.Column(db.String(32), nullable=False)  \n    ...  \n    \nclass Article(db.Model):\n    __tablename__ = 'articles'\n    id = db.Column(db.Integer, primary_key=True)  \n    title = db.Column(db.String(64), nullable=False) \n    author_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    reviewer_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    author = db.relationship('User', backref='articles')  \n    reviewer = db.relationship('User', backref='review_articles')  \n```\n\n\n看起来程序的设计应该是没问题，可运行的结果真的跟我们预想的一样吗？  \n当我们运行代码后，程序抛出了一个错误：  \n\n```\nsqlalchemy.exc.AmbiguousForeignKeysError: \nCould not determine join condition between parent/child tables on relationship Article.author \n- there are multiple foreign key paths linking the tables.  \nSpecify the 'foreign_keys' argument, providing a list of those columns \nwhich should be counted as containing a foreign key reference to the parent table. \n```\n\n可以看到SQLAchemy提示无法确定`Article.author`的父子表之间的关联，原因在于两张表之间存在多个外键。需要我们指定`foreign_keys`参数，提供一个包含关联了父表（即`User`表）外键的字段列表（`list`)  \n\n### 解决办法  \n\n查询了很多博客资料后这个问题依旧没有得到解决，只好去阅读[SQLAchemy的官方文档](https://docs.sqlalchemy.org/en/latest/index.html)，在SQLAchemy ORM > Relationship Configuation > Configuring how Relationship Joins下有关于[Handling Multiple Join Paths](https://docs.sqlalchemy.org/en/latest/orm/join_conditions.html#handling-multiple-join-paths)的介绍。  \n\n文档中说，在遇到两表之间存在多外键关联时，需要给`relationship()`指定`foreign_keys`参数。需要对我们的代码进行修改，添加`foreign_keys`参数，所以将代码修改为：  \n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)  \n    email = db.Column(db.String(64), nullable=False, unique=True)  \n    name = db.Column(db.String(32), nullable=False)  \n    ...\n\n    def __repr__(self):\n        return '<User id={0}, name={1}>'.format(self.id, self.name)  \n    \nclass Article(db.Model):\n    __tablename__ = 'articles'\n    id = db.Column(db.Integer, primary_key=True)  \n    title = db.Column(db.String(64), nullable=False) \n    author_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    reviewer_id = db.Column(db.Integer, db.ForeignKey(\"users.id\"))\n    author = db.relationship('User', backref='articles', foreign_keys=[author_id])  \n    reviewer = db.relationship('User', backref='review_articles', foreign_keys=[reviewer_id])\n\n    def __repr__(self):\n        return '<Article id={0}, title={1}>'.format(self.id, self.title)     \n```\n\n\n同时，在指定`foreign_keys`时，我们也可以使用字符串来指定。但如果使用列表，则列表必须是字符串的一部分。  \n\n```python\nauthor = db.relationship('User', backref='articles', foreign_keys=\"[author_id]\")\n```\n\n\n在我们这个具体的例子中，不需要列表，所以可以写成： \n\n\n```python\nauthor = db.relationship('User', backref='articles', foreign_keys=\"author_id\")\n```\n\n\n### 测试  \n\n在修改过后，我们运行程序，测试一下代码  \n我们先给`User`表添加两条数据   \n\n\n```\n>>> zhangsan = User(email='zhangsan@123.com', name='张三')\n>>> lisi = User(emaill='lisi@123.com', name='李四')\n>>> db.session.add_all([zhangsan,lisi])\n>>> db.session.commit()\n```\n\n\n接着给`Article`表添加一条记录，指定`Author`为`张三(users.id=1)`，`Reviewer`为`李四(usersid)`   \n\n\n```\n>>> article = Article()\n>>> article.title = \"Test\"\n>>> article.author_id = 1\n>>> article.reviewer_id = 2\n>>> db.session.add(article)\n>>> db.session.commit()\n```\n\n\n\n我们来做查询操作  \n\n\n```\n>>> article = Article.query.get(1)\n>>> article\n<Article id=1, title=Test>\n>>> article.author\n<User id=1, name=张三>\n>>> article.reviewer\n<User id=2, name=李四>\n```\n\n\n可以看到我们可以正确的查询到`article.author`和`article.reviewer`，关于[SQLAchemy中处理两张表之间存在多个外键的情况]()这个问题我们已经解决。  \n\n### 扩展  \n\n\n在`relationship()`中我们添加了`backref`参数来对关系提供反向引用，这样更加方便了我们的查询操作。示例： \n\n\n```\n>>> zhangsan = User.query.filter_by(name='张三').first()\n>>> zhangsan\n<User id=1, name=张三>\n>>> zhangsan.articles\n[<Article id=1, title=Test>]\n>>> zhangsan.review_articles\n[]\n```\n\n\n因为我们给`artice.author`添加了`articles`的反向引用，给`article.reviewer`添加了`review_articles`的反向引用。  \n所以对于`User 张三`来说，他是`article Test`的`Author`，可以通过`article.author`来查询得到`张三`。也可以通过`zhangsan.articles`反向查询得到`Test`这篇文章。  \n同时，因为`张三`不是任何一篇文章的`reviewer`，所以通过`zhangsan.review_articles`查询到结果为空列表。  \n同样的，我们来看`李四`的查询操作：\n\n\n```\n>>> lisi = User.query.filter_by(name='李四').first()\n>>> lisi\n<User id=2, name=李四>\n>>> lisi.articles\n[]\n>>> lisi.review_articles\n[<Article id=1, title=Test>]\n```\n\n\n结果其实跟`张三`的查询是类似的，只是两人的角色`author`和`reviewer`不同，这里不再啰嗦。  ","slug":"SQLAchemy中处理两张表之间存在多个外键的情况","published":1,"updated":"2019-01-25T06:22:11.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrborsaa0001s8tmarcvmcr8","content":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><p>在Flask的开发中，我们势必会遇到两张表之间存在多个外键的情况。例如，现在有两张表，一张表是<code>User</code>，另一张表是<code>Article</code>。一篇文章的作者<code>author_id</code>可以设置外键关联<code>User</code>表，同时文章的审稿人<code>reviewer_id</code>也可以设置外键关联<code>User</code>表。当我们以SQLAchemy多对一(many to one)的设计方法来添加<code>relationship</code>关系映射时，程序会抛出一个<code>AmbiguousForeignKeysError</code>错误，这篇文章我们就来解决这个问题。<br><a id=\"more\"></a></p><h3 id=\"出现Error的代码写法\"><a href=\"#出现Error的代码写法\" class=\"headerlink\" title=\"出现Error的代码写法\"></a>出现Error的代码写法</h3><p>先来看以SQLAchemy多对一的常规设计方法处理这个问题时我的代码写法。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"></span><br><span class=\"line\">db = SQLAlchemy()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'users'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    email = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>, unique=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">32</span>), nullable=<span class=\"keyword\">False</span>)  </span><br><span class=\"line\">    ...  </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'articles'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    title = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>) </span><br><span class=\"line\">    author_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    reviewer_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>)  </span><br><span class=\"line\">    reviewer = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'review_articles'</span>)</span><br></pre></td></tr></table></figure><p>看起来程序的设计应该是没问题，可运行的结果真的跟我们预想的一样吗？<br>当我们运行代码后，程序抛出了一个错误：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlalchemy.exc.AmbiguousForeignKeysError: </span><br><span class=\"line\">Could not determine join condition between parent/child tables on relationship Article.author </span><br><span class=\"line\">- there are multiple foreign key paths linking the tables.  </span><br><span class=\"line\">Specify the &apos;foreign_keys&apos; argument, providing a list of those columns </span><br><span class=\"line\">which should be counted as containing a foreign key reference to the parent table.</span><br></pre></td></tr></table></figure><p>可以看到SQLAchemy提示无法确定<code>Article.author</code>的父子表之间的关联，原因在于两张表之间存在多个外键。需要我们指定<code>foreign_keys</code>参数，提供一个包含关联了父表（即<code>User</code>表）外键的字段列表（<code>list</code>)</p><h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><p>查询了很多博客资料后这个问题依旧没有得到解决，只好去阅读<a href=\"https://docs.sqlalchemy.org/en/latest/index.html\" target=\"_blank\" rel=\"noopener\">SQLAchemy的官方文档</a>，在SQLAchemy ORM &gt; Relationship Configuation &gt; Configuring how Relationship Joins下有关于<a href=\"https://docs.sqlalchemy.org/en/latest/orm/join_conditions.html#handling-multiple-join-paths\" target=\"_blank\" rel=\"noopener\">Handling Multiple Join Paths</a>的介绍。</p><p>文档中说，在遇到两表之间存在多外键关联时，需要给<code>relationship()</code>指定<code>foreign_keys</code>参数。需要对我们的代码进行修改，添加<code>foreign_keys</code>参数，所以将代码修改为：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"></span><br><span class=\"line\">db = SQLAlchemy()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'users'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    email = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>, unique=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">32</span>), nullable=<span class=\"keyword\">False</span>)  </span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__repr__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;User id=&#123;0&#125;, name=&#123;1&#125;&gt;'</span>.format(self.id, self.name)  </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'articles'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    title = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>) </span><br><span class=\"line\">    author_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    reviewer_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=[author_id])  </span><br><span class=\"line\">    reviewer = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'review_articles'</span>, foreign_keys=[reviewer_id])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__repr__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;Article id=&#123;0&#125;, title=&#123;1&#125;&gt;'</span>.format(self.id, self.title)</span><br></pre></td></tr></table></figure><p>同时，在指定<code>foreign_keys</code>时，我们也可以使用字符串来指定。但如果使用列表，则列表必须是字符串的一部分。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=<span class=\"string\">\"[author_id]\"</span>)</span><br></pre></td></tr></table></figure><p>在我们这个具体的例子中，不需要列表，所以可以写成：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=<span class=\"string\">\"author_id\"</span>)</span><br></pre></td></tr></table></figure><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在修改过后，我们运行程序，测试一下代码<br>我们先给<code>User</code>表添加两条数据</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; zhangsan = User(email=&apos;zhangsan@123.com&apos;, name=&apos;张三&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; lisi = User(emaill=&apos;lisi@123.com&apos;, name=&apos;李四&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; db.session.add_all([zhangsan,lisi])</span><br><span class=\"line\">&gt;&gt;&gt; db.session.commit()</span><br></pre></td></tr></table></figure><p>接着给<code>Article</code>表添加一条记录，指定<code>Author</code>为<code>张三(users.id=1)</code>，<code>Reviewer</code>为<code>李四(usersid)</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; article = Article()</span><br><span class=\"line\">&gt;&gt;&gt; article.title = &quot;Test&quot;</span><br><span class=\"line\">&gt;&gt;&gt; article.author_id = 1</span><br><span class=\"line\">&gt;&gt;&gt; article.reviewer_id = 2</span><br><span class=\"line\">&gt;&gt;&gt; db.session.add(article)</span><br><span class=\"line\">&gt;&gt;&gt; db.session.commit()</span><br></pre></td></tr></table></figure><p>我们来做查询操作</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; article = Article.query.get(1)</span><br><span class=\"line\">&gt;&gt;&gt; article</span><br><span class=\"line\">&lt;Article id=1, title=Test&gt;</span><br><span class=\"line\">&gt;&gt;&gt; article.author</span><br><span class=\"line\">&lt;User id=1, name=张三&gt;</span><br><span class=\"line\">&gt;&gt;&gt; article.reviewer</span><br><span class=\"line\">&lt;User id=2, name=李四&gt;</span><br></pre></td></tr></table></figure><p>可以看到我们可以正确的查询到<code>article.author</code>和<code>article.reviewer</code>，关于<a href=\"\">SQLAchemy中处理两张表之间存在多个外键的情况</a>这个问题我们已经解决。</p><h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3><p>在<code>relationship()</code>中我们添加了<code>backref</code>参数来对关系提供反向引用，这样更加方便了我们的查询操作。示例：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; zhangsan = User.query.filter_by(name=&apos;张三&apos;).first()</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan</span><br><span class=\"line\">&lt;User id=1, name=张三&gt;</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan.articles</span><br><span class=\"line\">[&lt;Article id=1, title=Test&gt;]</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan.review_articles</span><br><span class=\"line\">[]</span><br></pre></td></tr></table></figure><p>因为我们给<code>artice.author</code>添加了<code>articles</code>的反向引用，给<code>article.reviewer</code>添加了<code>review_articles</code>的反向引用。<br>所以对于<code>User 张三</code>来说，他是<code>article Test</code>的<code>Author</code>，可以通过<code>article.author</code>来查询得到<code>张三</code>。也可以通过<code>zhangsan.articles</code>反向查询得到<code>Test</code>这篇文章。<br>同时，因为<code>张三</code>不是任何一篇文章的<code>reviewer</code>，所以通过<code>zhangsan.review_articles</code>查询到结果为空列表。<br>同样的，我们来看<code>李四</code>的查询操作：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; lisi = User.query.filter_by(name=&apos;李四&apos;).first()</span><br><span class=\"line\">&gt;&gt;&gt; lisi</span><br><span class=\"line\">&lt;User id=2, name=李四&gt;</span><br><span class=\"line\">&gt;&gt;&gt; lisi.articles</span><br><span class=\"line\">[]</span><br><span class=\"line\">&gt;&gt;&gt; lisi.review_articles</span><br><span class=\"line\">[&lt;Article id=1, title=Test&gt;]</span><br></pre></td></tr></table></figure><p>结果其实跟<code>张三</code>的查询是类似的，只是两人的角色<code>author</code>和<code>reviewer</code>不同，这里不再啰嗦。</p><!-- rebuild by neat -->","site":{"data":{}},"excerpt":"<!-- build time:Fri Jan 25 2019 14:49:36 GMT+0800 (GMT+08:00) --><p>在Flask的开发中，我们势必会遇到两张表之间存在多个外键的情况。例如，现在有两张表，一张表是<code>User</code>，另一张表是<code>Article</code>。一篇文章的作者<code>author_id</code>可以设置外键关联<code>User</code>表，同时文章的审稿人<code>reviewer_id</code>也可以设置外键关联<code>User</code>表。当我们以SQLAchemy多对一(many to one)的设计方法来添加<code>relationship</code>关系映射时，程序会抛出一个<code>AmbiguousForeignKeysError</code>错误，这篇文章我们就来解决这个问题。<br>","more":"</p><h3 id=\"出现Error的代码写法\"><a href=\"#出现Error的代码写法\" class=\"headerlink\" title=\"出现Error的代码写法\"></a>出现Error的代码写法</h3><p>先来看以SQLAchemy多对一的常规设计方法处理这个问题时我的代码写法。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"></span><br><span class=\"line\">db = SQLAlchemy()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'users'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    email = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>, unique=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">32</span>), nullable=<span class=\"keyword\">False</span>)  </span><br><span class=\"line\">    ...  </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'articles'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    title = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>) </span><br><span class=\"line\">    author_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    reviewer_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>)  </span><br><span class=\"line\">    reviewer = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'review_articles'</span>)</span><br></pre></td></tr></table></figure><p>看起来程序的设计应该是没问题，可运行的结果真的跟我们预想的一样吗？<br>当我们运行代码后，程序抛出了一个错误：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlalchemy.exc.AmbiguousForeignKeysError: </span><br><span class=\"line\">Could not determine join condition between parent/child tables on relationship Article.author </span><br><span class=\"line\">- there are multiple foreign key paths linking the tables.  </span><br><span class=\"line\">Specify the &apos;foreign_keys&apos; argument, providing a list of those columns </span><br><span class=\"line\">which should be counted as containing a foreign key reference to the parent table.</span><br></pre></td></tr></table></figure><p>可以看到SQLAchemy提示无法确定<code>Article.author</code>的父子表之间的关联，原因在于两张表之间存在多个外键。需要我们指定<code>foreign_keys</code>参数，提供一个包含关联了父表（即<code>User</code>表）外键的字段列表（<code>list</code>)</p><h3 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h3><p>查询了很多博客资料后这个问题依旧没有得到解决，只好去阅读<a href=\"https://docs.sqlalchemy.org/en/latest/index.html\" target=\"_blank\" rel=\"noopener\">SQLAchemy的官方文档</a>，在SQLAchemy ORM &gt; Relationship Configuation &gt; Configuring how Relationship Joins下有关于<a href=\"https://docs.sqlalchemy.org/en/latest/orm/join_conditions.html#handling-multiple-join-paths\" target=\"_blank\" rel=\"noopener\">Handling Multiple Join Paths</a>的介绍。</p><p>文档中说，在遇到两表之间存在多外键关联时，需要给<code>relationship()</code>指定<code>foreign_keys</code>参数。需要对我们的代码进行修改，添加<code>foreign_keys</code>参数，所以将代码修改为：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_sqlalchemy <span class=\"keyword\">import</span> SQLAlchemy</span><br><span class=\"line\"></span><br><span class=\"line\">db = SQLAlchemy()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'users'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    email = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>, unique=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    name = db.Column(db.String(<span class=\"number\">32</span>), nullable=<span class=\"keyword\">False</span>)  </span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__repr__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;User id=&#123;0&#125;, name=&#123;1&#125;&gt;'</span>.format(self.id, self.name)  </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span><span class=\"params\">(db.Model)</span>:</span></span><br><span class=\"line\">    __tablename__ = <span class=\"string\">'articles'</span></span><br><span class=\"line\">    id = db.Column(db.Integer, primary_key=<span class=\"keyword\">True</span>)  </span><br><span class=\"line\">    title = db.Column(db.String(<span class=\"number\">64</span>), nullable=<span class=\"keyword\">False</span>) </span><br><span class=\"line\">    author_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    reviewer_id = db.Column(db.Integer, db.ForeignKey(<span class=\"string\">\"users.id\"</span>))</span><br><span class=\"line\">    author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=[author_id])  </span><br><span class=\"line\">    reviewer = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'review_articles'</span>, foreign_keys=[reviewer_id])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__repr__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&lt;Article id=&#123;0&#125;, title=&#123;1&#125;&gt;'</span>.format(self.id, self.title)</span><br></pre></td></tr></table></figure><p>同时，在指定<code>foreign_keys</code>时，我们也可以使用字符串来指定。但如果使用列表，则列表必须是字符串的一部分。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=<span class=\"string\">\"[author_id]\"</span>)</span><br></pre></td></tr></table></figure><p>在我们这个具体的例子中，不需要列表，所以可以写成：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">author = db.relationship(<span class=\"string\">'User'</span>, backref=<span class=\"string\">'articles'</span>, foreign_keys=<span class=\"string\">\"author_id\"</span>)</span><br></pre></td></tr></table></figure><h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>在修改过后，我们运行程序，测试一下代码<br>我们先给<code>User</code>表添加两条数据</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; zhangsan = User(email=&apos;zhangsan@123.com&apos;, name=&apos;张三&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; lisi = User(emaill=&apos;lisi@123.com&apos;, name=&apos;李四&apos;)</span><br><span class=\"line\">&gt;&gt;&gt; db.session.add_all([zhangsan,lisi])</span><br><span class=\"line\">&gt;&gt;&gt; db.session.commit()</span><br></pre></td></tr></table></figure><p>接着给<code>Article</code>表添加一条记录，指定<code>Author</code>为<code>张三(users.id=1)</code>，<code>Reviewer</code>为<code>李四(usersid)</code></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; article = Article()</span><br><span class=\"line\">&gt;&gt;&gt; article.title = &quot;Test&quot;</span><br><span class=\"line\">&gt;&gt;&gt; article.author_id = 1</span><br><span class=\"line\">&gt;&gt;&gt; article.reviewer_id = 2</span><br><span class=\"line\">&gt;&gt;&gt; db.session.add(article)</span><br><span class=\"line\">&gt;&gt;&gt; db.session.commit()</span><br></pre></td></tr></table></figure><p>我们来做查询操作</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; article = Article.query.get(1)</span><br><span class=\"line\">&gt;&gt;&gt; article</span><br><span class=\"line\">&lt;Article id=1, title=Test&gt;</span><br><span class=\"line\">&gt;&gt;&gt; article.author</span><br><span class=\"line\">&lt;User id=1, name=张三&gt;</span><br><span class=\"line\">&gt;&gt;&gt; article.reviewer</span><br><span class=\"line\">&lt;User id=2, name=李四&gt;</span><br></pre></td></tr></table></figure><p>可以看到我们可以正确的查询到<code>article.author</code>和<code>article.reviewer</code>，关于<a href=\"\">SQLAchemy中处理两张表之间存在多个外键的情况</a>这个问题我们已经解决。</p><h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3><p>在<code>relationship()</code>中我们添加了<code>backref</code>参数来对关系提供反向引用，这样更加方便了我们的查询操作。示例：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; zhangsan = User.query.filter_by(name=&apos;张三&apos;).first()</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan</span><br><span class=\"line\">&lt;User id=1, name=张三&gt;</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan.articles</span><br><span class=\"line\">[&lt;Article id=1, title=Test&gt;]</span><br><span class=\"line\">&gt;&gt;&gt; zhangsan.review_articles</span><br><span class=\"line\">[]</span><br></pre></td></tr></table></figure><p>因为我们给<code>artice.author</code>添加了<code>articles</code>的反向引用，给<code>article.reviewer</code>添加了<code>review_articles</code>的反向引用。<br>所以对于<code>User 张三</code>来说，他是<code>article Test</code>的<code>Author</code>，可以通过<code>article.author</code>来查询得到<code>张三</code>。也可以通过<code>zhangsan.articles</code>反向查询得到<code>Test</code>这篇文章。<br>同时，因为<code>张三</code>不是任何一篇文章的<code>reviewer</code>，所以通过<code>zhangsan.review_articles</code>查询到结果为空列表。<br>同样的，我们来看<code>李四</code>的查询操作：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; lisi = User.query.filter_by(name=&apos;李四&apos;).first()</span><br><span class=\"line\">&gt;&gt;&gt; lisi</span><br><span class=\"line\">&lt;User id=2, name=李四&gt;</span><br><span class=\"line\">&gt;&gt;&gt; lisi.articles</span><br><span class=\"line\">[]</span><br><span class=\"line\">&gt;&gt;&gt; lisi.review_articles</span><br><span class=\"line\">[&lt;Article id=1, title=Test&gt;]</span><br></pre></td></tr></table></figure><p>结果其实跟<code>张三</code>的查询是类似的，只是两人的角色<code>author</code>和<code>reviewer</code>不同，这里不再啰嗦。</p><!-- rebuild by neat -->"}],"PostAsset":[],"PostCategory":[{"post_id":"cjrborsaa0001s8tmarcvmcr8","category_id":"cjrborsbb0004s8tmewehzgvc","_id":"cjrborsbl0007s8tmz51rort9"}],"PostTag":[{"post_id":"cjrborsaa0001s8tmarcvmcr8","tag_id":"cjrborsbf0005s8tm9d8qfm1e","_id":"cjrborsbr0009s8tmm62g4ebp"},{"post_id":"cjrborsaa0001s8tmarcvmcr8","tag_id":"cjrborsbi0006s8tmk793qnbf","_id":"cjrborsbt000as8tm9ogcmoo0"},{"post_id":"cjrborsaa0001s8tmarcvmcr8","tag_id":"cjrborsbn0008s8tmzsx1knd8","_id":"cjrborsbv000bs8tm8uaucdzd"}],"Tag":[{"name":"Flask","_id":"cjrborsbf0005s8tm9d8qfm1e"},{"name":"Flask-SQLAchemy","_id":"cjrborsbi0006s8tmk793qnbf"},{"name":"SQLAchemy","_id":"cjrborsbn0008s8tmzsx1knd8"}]}}